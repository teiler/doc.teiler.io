FORMAT: 1A
HOST: https://api.teiler.io/v1

# tylr

tylr is a tool to split expenses in groups

Most operations expect a group ID to work with. You are expected to deliver the group ID in the custom header ``X-Teiler-GroupID``. To obtain a group ID, check "Create a new group".

Throughout this document, you'll find error responses defined on a per-resource basis. Their description is based on the following schema:

* Textual description
  * Applicable operations (POST, GET, PUT, DELETE)
  * HTTP Status Code
  * The JSON response that is delivered, consisting of a constant error code you may check against.

On all requests, the following errors may happen:

* Not authorized to a group. This indicates a missing or wrong ``X-Teiler-GroupID`` header.
* Server error
  * All operations
  * HTTP 500

The arrayeration values for ``currency`` are currently:
* ``CHF``
* ``EUR``

All time values follow the ISO time format standard [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).


# Groups [/groups]

A group is a collection of people and their expenses and compensations.

## Create a new group [POST]

+ Request (application/json)

    + Body

            {
                "name": "Group name", 
            }

+ Response 200 (application/json)

    + Body

            {
                "id": "Group ID",
                "name": "Group name",
            }  

+ Response 409 (application/json)

    The person names clash in this group.

    + Body

            {
                "error": [
                    "PEOPLE_NAME_CONFLICT",
                ]
            }

    + Schema

            {
                "error": [ 
                    "ERROR_CODE",
                    ...
                ]
            }

+ Response 416 (application/json)

    The currency does not fit to the array values.

    + Body

            {
                "error": [
                    "CURRENCY_NOT_VALID",
                ]
            }

    + Schema

            {
                "error": [ 
                    "ERROR_CODE",
                    ...
                ]
            }

## Get a group [GET /groups/{id}]

+ Parameters
    + id: am5s9l5k9d43 (string) - ID of the group
+ Response 200

    + Schema

            {
                "name": "Group name",
                "people": [
                    {
                        "id": (integer) "Person ID",
                        "name": "Person Name"
                    }, ...
                ],
                "currency": (enum[currency]) "Default currency",
            }

+ Response 401 (application/json)

    Error during authentication.

    + Body

            {
                "error": [
                    "NOT_AUTHORIZED_TO_GROUP",
                ]
            }

    + Schema

            {
                "error": [ 
                    "ERROR_CODE",
                    ...
                ]
            }

## Edit a group [PUT /groups/{id}]

The backend implements the following behavior concerning people's IDs and names:

* If an ID is given and it belongs to the group already, the name of the person gets changed
* If the ID is not given, a new person gets created and associated with the group.

+ Parameters
    + id: am5s9l5k9d43 (string) - ID of the group
+ Request (application/json)

    + Schema
        
            {
                "name": "Group name",
                "people": [
                    {
                        "id": (integer) "Person ID",
                        "name": "Person Name"
                    }, ...
                ],
                "currency": (array[currency]) "Default currency"
            }
        
+ Response 200

+ Response 401 (application/json)

    Error during authentication.

    + Body

            {
                "error": [
                    "NOT_AUTHORIZED_TO_GROUP",
                ]
            }

    + Schema

            {
                "error": [ 
                    "ERROR_CODE",
                    ...
                ]
            }    

## Delete a group [DELETE  /groups/{id}]

+ Response 200

+ Response 401 (application/json)

    Error during authentication.

    + Body

            {
                "error": [
                    "NOT_AUTHORIZED_TO_GROUP",
                ]
            }

    + Schema

            {
                "error": [ 
                    "ERROR_CODE",
                    ...
                ]
            }

# Persons [/groups/{groupid}/persons]

+ Parameters
    + groupid: am5s9l5k9d43 (string) - ID of the group

## Create a new person [POST]

+ Request (application/json)

    + Body

            {
                "name": "Person name", 
            }

+ Response 200 (application/json)

    + Body

            {
                "id": "Person ID",
                "name": "Person name",
            }

+ Response 409 (application/json)

    The person names clash in this group.

    + Body

            {
                "error": [
                    "PEOPLE_NAME_CONFLICT",
                ]
            }

    + Schema

            {
                "error": [ 
                    "ERROR_CODE",
                    ...
                ]
            }

## Get persons [GET /groups/{groupid}/persons{?limit}]

+ Parameters
    + groupid: am5s9l5k9d43 (string) - ID of the group
    + limit: 20 (number, optional) - The maximum number of results to return.
        + Default: `20`

+ Response 200 (application/json)

    + Body

            [
                {
                    "id": "Person ID",
                    "name": "Person name",
                }, ...
            ]  



## Edit a person [PUT /groups/{groupid}/persons/{personid}]

+ Parameters
    + groupid: am5s9l5k9d43 (string) - ID of the group
    + personid: 4 (integer) - ID of the person

+ Request (application/json)

    + Body

            {
                "name": "Person name", 
            }

+ Response 200 (application/json)

    + Body

            {
                "id": "Person ID",
                "name": "Person name",
            }  

+ Response 409 (application/json)

    The person names clash in this group.

    + Body

            {
                "error": [
                    "PEOPLE_NAME_CONFLICT",
                ]
            }

    + Schema

            {
                "error": [ 
                    "ERROR_CODE",
                    ...
                ]
            } 

## Delete a person [DELETE /groups/{groupid}/persons/{personid}]

+ Parameters
    + groupid: am5s9l5k9d43 (string) - ID of the group
    + personid: 4 (integer) - ID of the person

+ Response 200

# Expense [/groups/{groupid}/expenses]

An expense is something one person bought and is shared with other people. The payer can decide who profits from that and can even set how much each one profits.

+ Parameters
    + groupid: am5s9l5k9d43 (string) - ID of the group

## Create an expense [POST]

+ Request (application/json)

    + Schema

            {
                "title": "Title",
                "amount": (integer) "Amount in Rappen/Cents",
                "payer": (integer) "ID of the payer",
                "profiteers": [
                    {
                        "id": (integer) "Profiteer ID",
                        "factor": (float) "Percentage between 0 and 1.0 of the whole amount",
                    }, ...
                ],
            }

+ Response 403 (application/json)

    Transaction ID, Payer ID or Profiteer ID do not belong to current group:

    + Attributes (object)
        + error (array)
            + TRANSACTION_NOT_IN_GROUP (string)
            + PAYER_NOT_IN_GROUP (string)
            + PROFITEER_NOT_IN_GROUP (string)

    + Schema

            {
                "error": [ 
                    "ERROR_CODE",
                    ...
                ]
            }

+ Response 404 (application/json)

    Transaction ID, Payer ID or Profiteer ID is not found:

    + Attributes (object)
        + error (array)
            + TRANSACTION_NOT_FOUND (string)
            + PAYER_NOT_FOUND (string)
            + PROFITEER_NOT_FOUND (string)

    + Schema

            {
                "error": [ 
                    "ERROR_CODE",
                    ...
                ]
            }

+ Response 406 (application/json)

    Factors dont add up to 1.

    + Attributes (object)
        + error (array)
            + FACTORS_DONT_ADD_UP (string)

    + Schema

            {
                "error": [ 
                    "ERROR_CODE",
                    ...
                ]
            }

## Get last expenses [GET /groups/{groupid}/expenses{?limit}]

+ Parameters
    + groupid: am5s9l5k9d43 (string) - ID of the group
    + limit: 20 (number, optional) - The maximum number of results to return.
        + Default: `20`

+ Response 200

    + Schema
        
            [
                {
                    "title": "Title",
                    "amount": (integer) "Amount in Rappen/Cents",
                    "payer": (integer) "ID of the payer",
                    "payer-name": "Name of the payer",
                    "profiteers": [
                        {
                            "id": (integer) "Profiteer ID",
                            "name": "Profiteer Name"
                            "factor": (float) "Percentage between 0 and 1.0 of the whole amount",
                        }, ...
                    ],
                    "create-time": (datetime) "Create time",
                    "update-time": (datetime) "Update Time"
                }, ...
            ]

+ Response 403 (application/json)

    Transaction ID, Payer ID or Profiteer ID do not belong to current group:

    + Attributes (object)
        + error (array)
            + TRANSACTION_NOT_IN_GROUP (string)
            + PAYER_NOT_IN_GROUP (string)
            + PROFITEER_NOT_IN_GROUP (string)

    + Schema

            {
                "error": [ 
                    "ERROR_CODE",
                    ...
                ]
            }

+ Response 404 (application/json)

    Transaction ID, Payer ID or Profiteer ID is not found:

    + Attributes (object)
        + error (array)
            + TRANSACTION_NOT_FOUND (string)
            + PAYER_NOT_FOUND (string)
            + PROFITEER_NOT_FOUND (string)

    + Schema

            {
                "error": [ 
                    "ERROR_CODE",
                    ...
                ]
            }

+ Response 406 (application/json)

    Factors dont add up to 1.

    + Attributes (object)
        + error (array)
            + FACTORS_DONT_ADD_UP (string)

    + Schema

            {
                "error": [ 
                    "ERROR_CODE",
                    ...
                ]
            }     

## Get an expense [GET /groups/{groupid}/expenses/{expenseid}]

+ Parameters
    + groupid: am5s9l5k9d43 (string) - ID of the group
    + expenseid: 2634 (integer) - ID of the expense

+ Response 200

    + Schema
        
            {
                "title": "Title",
                "amount": (integer) "Amount in Rappen/Cents",
                "payer": (integer) "ID of the payer",
                "payer-name": "Name of the payer",
                "profiteers": [
                    {
                        "id": (integer) "Profiteer ID",
                        "name": "Profiteer Name"
                        "factor": (float) "Percentage between 0 and 1.0 of the whole amount",
                    }, ...
                ],
                "create-time": (datetime) "Create time",
                "update-time": (datetime) "Update Time"
            }

+ Response 403 (application/json)

    Transaction ID, Payer ID or Profiteer ID do not belong to current group:

    + Attributes (object)
        + error (array)
            + TRANSACTION_NOT_IN_GROUP (string)
            + PAYER_NOT_IN_GROUP (string)
            + PROFITEER_NOT_IN_GROUP (string)

    + Schema

            {
                "error": [ 
                    "ERROR_CODE",
                    ...
                ]
            }

+ Response 404 (application/json)

    Transaction ID, Payer ID or Profiteer ID is not found:

    + Attributes (object)
        + error (array)
            + TRANSACTION_NOT_FOUND (string)
            + PAYER_NOT_FOUND (string)
            + PROFITEER_NOT_FOUND (string)

    + Schema

            {
                "error": [ 
                    "ERROR_CODE",
                    ...
                ]
            }

+ Response 406 (application/json)

    Factors dont add up to 1.

    + Attributes (object)
        + error (array)
            + FACTORS_DONT_ADD_UP (string)

    + Schema

            {
                "error": [ 
                    "ERROR_CODE",
                    ...
                ]
            }
        

## Edit an expense [PUT /groups/{groupid}/expenses/{expenseid}]

+ Parameters
    + groupid: am5s9l5k9d43 (string) - ID of the group
    + expenseid: 2634 (integer) - ID of the expense

+ Request (application/json)

        {
            "title": "Title",
            "amount": (integer) "Amount in Rappen/Cents",
            "payer": (integer) "ID of the payer",
            "profiteers": [
                {
                    "id": (integer) "Profiteer ID",
                    "factor": (float) "Percentage between 0 and 1.0 of the whole amount",
                }, ...
            ],
        }
        
+ Response 200

+ Response 403 (application/json)

    Transaction ID, Payer ID or Profiteer ID do not belong to current group:

    + Attributes (object)
        + error (array)
            + TRANSACTION_NOT_IN_GROUP (string)
            + PAYER_NOT_IN_GROUP (string)
            + PROFITEER_NOT_IN_GROUP (string)

    + Schema

            {
                "error": [ 
                    "ERROR_CODE",
                    ...
                ]
            }

+ Response 404 (application/json)

    Transaction ID, Payer ID or Profiteer ID is not found:

    + Attributes (object)
        + error (array)
            + TRANSACTION_NOT_FOUND (string)
            + PAYER_NOT_FOUND (string)
            + PROFITEER_NOT_FOUND (string)

    + Schema

            {
                "error": [ 
                    "ERROR_CODE",
                    ...
                ]
            }

+ Response 406 (application/json)

    Factors dont add up to 1.

    + Attributes (object)
        + error (array)
            + FACTORS_DONT_ADD_UP (string)

    + Schema

            {
                "error": [ 
                    "ERROR_CODE",
                    ...
                ]
            }
        


## Delete an expense [DELETE /groups/{groupid}/expenses/{expenseid}]

+ Parameters
    + groupid: am5s9l5k9d43 (string) - ID of the group
    + expenseid: 2634 (integer) - ID of the expense
        
+ Response 200

+ Response 403 (application/json)

    Transaction ID, Payer ID or Profiteer ID do not belong to current group:

    + Attributes (object)
        + error (array)
            + TRANSACTION_NOT_IN_GROUP (string)
            + PAYER_NOT_IN_GROUP (string)
            + PROFITEER_NOT_IN_GROUP (string)

    + Schema

            {
                "error": [ 
                    "ERROR_CODE",
                    ...
                ]
            }

+ Response 404 (application/json)

    Transaction ID, Payer ID or Profiteer ID is not found:

    + Attributes (object)
        + error (array)
            + TRANSACTION_NOT_FOUND (string)
            + PAYER_NOT_FOUND (string)
            + PROFITEER_NOT_FOUND (string)

    + Schema

            {
                "error": [ 
                    "ERROR_CODE",
                    ...
                ]
            }

+ Response 406 (application/json)

    Factors dont add up to 1.

    + Attributes (object)
        + error (array)
            + FACTORS_DONT_ADD_UP (string)

    + Schema

            {
                "error": [ 
                    "ERROR_CODE",
                    ...
                ]
            }

        
# Compensation [/groups/{groupid}/compensations]

A compensation is a payment that is recorded in tylr. It basically follows the Expense model, except there's just one profiteer.

+ Parameters
    + groupid: am5s9l5k9d43 (string) - ID of the group

## Create a compensation [POST]

+ Request (application/json)

        {
            "title": "Title",
            "amount": (integer) "Amount in Rappen/Cents",
            "payer": (integer) "ID of the payer",
            "profiteer": (integer) "ID of the profiteer",
        }
        
+ Response 200 (application/json)

    + Schema

            {
                "id": "Compensation ID"
            }



+ Response 403 (application/json)

    Transaction ID, Payer ID or Profiteer ID do not belong to current group:

    + Attributes (object)
        + error (array)
            + TRANSACTION_NOT_IN_GROUP (string)
            + PAYER_NOT_IN_GROUP (string)
            + PROFITEER_NOT_IN_GROUP (string)

    + Schema

            {
                "error": [ 
                    "ERROR_CODE",
                    ...
                ]
            }

+ Response 404 (application/json)

    Transaction ID, Payer ID or Profiteer ID is not found:

    + Attributes (object)
        + error (array)
            + TRANSACTION_NOT_FOUND (string)
            + PAYER_NOT_FOUND (string)
            + PROFITEER_NOT_FOUND (string)

    + Schema

            {
                "error": [ 
                    "ERROR_CODE",
                    ...
                ]
            }

## Get compensations [GET /groups/{groupid}/compensations{?limit}]

+ Parameters
    + groupid: am5s9l5k9d43 (string) - ID of the group
    + limit: 20 (number, optional) - The maximum number of results to return.
        + Default: `2

+ Response 200 (application/json)

    + Schema
        
            [
                {
                    "title": "Title",
                    "amount": (integer) "Amount in Rappen/Cents",
                    "payer": (integer) "ID of the payer",
                    "payer-name": "Name of the payer",
                    "profiteer": (integer) "ID of the profiteer",
                    "profiteer-name:" "Name of the profiteer",
                    "create-time": (datetime) "Create time",
                    "update-time": (datetime) "Update Time",
                }, ...
            ]

+ Response 403 (application/json)

    Transaction ID, Payer ID or Profiteer ID do not belong to current group:

    + Attributes (object)
        + error (array)
            + TRANSACTION_NOT_IN_GROUP (string)
            + PAYER_NOT_IN_GROUP (string)
            + PROFITEER_NOT_IN_GROUP (string)

    + Schema

            {
                "error": [ 
                    "ERROR_CODE",
                    ...
                ]
            }

+ Response 404 (application/json)

    Transaction ID, Payer ID or Profiteer ID is not found:

    + Attributes (object)
        + error (array)
            + TRANSACTION_NOT_FOUND (string)
            + PAYER_NOT_FOUND (string)
            + PROFITEER_NOT_FOUND (string)

    + Schema

            {
                "error": [ 
                    "ERROR_CODE",
                    ...
                ]
            }
        
## Get a compensation [GET /groups/{groupid}/compensations/{compensationid}]

+ Parameters
    + groupid: am5s9l5k9d43 (string) - ID of the group
    + compensationid: 852 (integer) - ID of the expense    + id: 852 (integer) - ID of the compensation

+ Response 200 (application/json)

    + Schema
        
            {
                "title": "Title",
                "amount": (integer) "Amount in Rappen/Cents",
                "payer": (integer) "ID of the payer",
                "payer-name": "Name of the payer",
                "profiteer": (integer) "ID of the profiteer",
                "profiteer-name:" "Name of the profiteer",
                "create-time": (datetime) "Create time",
                "update-time": (datetime) "Update Time",
            }

+ Response 403 (application/json)

    Transaction ID, Payer ID or Profiteer ID do not belong to current group:

    + Attributes (object)
        + error (array)
            + TRANSACTION_NOT_IN_GROUP (string)
            + PAYER_NOT_IN_GROUP (string)
            + PROFITEER_NOT_IN_GROUP (string)

    + Schema

            {
                "error": [ 
                    "ERROR_CODE",
                    ...
                ]
            }

+ Response 404 (application/json)

    Transaction ID, Payer ID or Profiteer ID is not found:

    + Attributes (object)
        + error (array)
            + TRANSACTION_NOT_FOUND (string)
            + PAYER_NOT_FOUND (string)
            + PROFITEER_NOT_FOUND (string)

    + Schema

            {
                "error": [ 
                    "ERROR_CODE",
                    ...
                ]
            }
 
## Edit a compensation [PUT /groups/{groupid}/compensations/{compensationid}]

+ Parameters
    + groupid: am5s9l5k9d43 (string) - ID of the group
    + compensationid: 852 (integer) - ID of the expense    + id: 852 (integer) - ID of the compensation

+ Request (application/json)

        {
            "title": "Title",
            "amount": (integer) "Amount in Rappen/Cents",
            "payer": (integer) "ID of the payer",
            "profiteer": (integer) "ID of the profiteer",
        }
        
+ Response 200

+ Response 403 (application/json)

    Transaction ID, Payer ID or Profiteer ID do not belong to current group:

    + Attributes (object)
        + error (array)
            + TRANSACTION_NOT_IN_GROUP (string)
            + PAYER_NOT_IN_GROUP (string)
            + PROFITEER_NOT_IN_GROUP (string)

    + Schema

            {
                "error": [ 
                    "ERROR_CODE",
                    ...
                ]
            }

+ Response 404 (application/json)

    Transaction ID, Payer ID or Profiteer ID is not found:

    + Attributes (object)
        + error (array)
            + TRANSACTION_NOT_FOUND (string)
            + PAYER_NOT_FOUND (string)
            + PROFITEER_NOT_FOUND (string)

    + Schema

            {
                "error": [ 
                    "ERROR_CODE",
                    ...
                ]
            }


        
## Delete a compensation [DELETE /groups/{groupid}/compensations/{compensationid}]

+ Parameters
    + groupid: am5s9l5k9d43 (string) - ID of the group
    + compensationid: 852 (integer) - ID of the expense
        
+ Response 200
        
## Debt [/groups/{groupid}/debt]

Shows the debt to the group with the concept of a balance.

* A positive value means, the person has a credit on the group (the group owes this person)
* A negative value means, the person has a debt on the group (he/she owes the group)

+ Parameters
    + groupid: am5s9l5k9d43 (string) - ID of the group

### Get Debts [GET]

+ Response 200

        [

            {
                "id": (integer) "ID of the person",
                "name": "Name of the person",
                "balance": (integer) "Balance of the person in Rappen/Cents",
            }, ...
        ]

## Settle up [/groups/{groupid}/settleup]

Shows suggested compensations between group members. They're formatted as multiple compensations, so you could re-use them when the user wants to quickly settle up.

+ Parameters
    + groupid: am5s9l5k9d43 (string) - ID of the group

### Get Settle Up [GET]

+ Response 200

        [
            {
                "title": "Title",
                "amount": (integer) "Amount in Rappen/Cents",
                "payer": (integer) "ID of the payer",
                "payer-name": "Name of the payer",
                "profiteer": (integer) "ID of the profiteer",
                "profiteer-name:" "Name of the profiteer",
            }, ...
        ]

